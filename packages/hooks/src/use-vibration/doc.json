{
  "name": "useVibration",
  "description": "A React hook for controlling device vibration using the Vibration API. Provides functions to trigger vibration patterns and stop ongoing vibrations.",
  "category": "browser",
  "version": "1.0.0",
  "parameters": [],
  "returnType": {
    "type": "UseVibrationReturn",
    "properties": [
      {
        "name": "vibrate",
        "type": "(pattern: number | number[]) => boolean",
        "description": "Trigger vibration with specified pattern (duration in ms or array of durations)"
      },
      {
        "name": "stop",
        "type": "() => void",
        "description": "Stop any ongoing vibration"
      },
      {
        "name": "isSupported",
        "type": "boolean",
        "description": "Whether the Vibration API is supported in the current browser"
      }
    ]
  },
  "examples": [
    {
      "title": "Notification with vibration",
      "description": "Basic vibration patterns for different notification types",
      "code": "import { useVibration } from '@usehooks.io/use-vibration';\n\nfunction NotificationComponent() {\n  const { vibrate, stop, isSupported } = useVibration();\n\n  const handleNotification = () => {\n    // Single vibration for 200ms\n    vibrate(200);\n  };\n\n  const handleUrgentNotification = () => {\n    // Pattern: vibrate 100ms, pause 50ms, vibrate 100ms, pause 50ms, vibrate 200ms\n    vibrate([100, 50, 100, 50, 200]);\n  };\n\n  const handleError = () => {\n    // Long vibration for errors\n    vibrate(500);\n  };\n\n  if (!isSupported) {\n    return <div>Vibration not supported on this device</div>;\n  }\n\n  return (\n    <div>\n      <button onClick={handleNotification}>\n        Normal Notification\n      </button>\n      \n      <button onClick={handleUrgentNotification}>\n        Urgent Notification\n      </button>\n      \n      <button onClick={handleError}>\n        Error Notification\n      </button>\n      \n      <button onClick={stop}>\n        Stop Vibration\n      </button>\n    </div>\n  );\n}"
    }
  ],
  "dependencies": ["react"],
  "notes": [
    "Vibration API is primarily supported on mobile devices",
    "Pattern arrays alternate between vibration and pause durations",
    "Returns false if vibration fails or is not supported",
    "Some browsers may ignore vibration requests for security/UX reasons",
    "Vibration may be disabled in browser settings or by user preference"
  ]
}